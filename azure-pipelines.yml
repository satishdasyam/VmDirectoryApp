# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android


parameters:
  - name: executeBash
    displayName: Execute bash task?
    type: boolean
    default: true

trigger:
  - master
  - releases/*

pr:
  - main
  - releases/*

#pr:
#  branches:
#    include:
#      - '*'  # for every branch
#      - main
#      - releases/*
#    exclude:
#      - releases/old*

pool:
  vmImage: 'ubuntu-latest'

# container: adoptopenjdk:latest

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'assembleBrandVMDevDebug testBrandVMDevDebugUnitTest'
  displayName: gradlew assembleBrandVMDevDebug
- task: CopyFiles@2
  inputs:
    contents: '**/*.apk'
    targetFolder: '$(build.artifactStagingDirectory)'
  displayName: Copy .apk files to artifact staging directory
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(build.artifactStagingDirectory)'
    artifactName: 'drop'
    artifactType: 'container'
  displayName: Publish artifacts
- ${{ if eq(parameters.executeBash, true) }}:
    - template: azure_templates/bash_script.yml  # Template reference

#  Store each of the following passwords in a secret variable.
# https://learn.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops&tabs=yaml%2Cbatch#secret-variables
#- task: AndroidSigning@2
#  inputs:
#    apkFiles: '**/*.apk'
#    jarsign: true
#    jarsignerKeystoreFile: 'pathToYourKeystoreFile'
#    jarsignerKeystorePassword: '$(jarsignerKeystorePassword)'
#    jarsignerKeystoreAlias: 'yourKeystoreAlias'
#    jarsignerKeyPassword: '$(jarsignerKeyPassword)'
#    zipalign: true


